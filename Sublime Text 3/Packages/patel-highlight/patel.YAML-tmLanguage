# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Patrisika Example Language
scopeName: source.patel
fileTypes: [patel]
uuid: B000C57C-9D82-4E1A-BC91-13CA75788B52
repository:
  invoke:
    name: meta.patel.invoke
    begin: \[
    end: \]
    beginCaptures:
      '0': {'name': 'meta.tag.bracket.patel'}
    endCaptures:
      '0': {'name': 'meta.tag.bracket.patel'}
    patterns:
    - include: '#comment'
    - include: '#invoke'
    - include: '#structure'
    - include: '#block'
    - include: '#string'
    - include: '#singlestring'
    - include: '#numeric'
    - include: '#keyword'
    - include: '#libraryfunction'
    - include: '#partoperator'
    - include: '#identifier'
  
  invokeinterpolate:
    name: meta.patel.invoke.interpolated
    begin: \\\[
    end: \]
    patterns:
    - include: '#comment'
    - include: '#invoke'
    - include: '#structure'
    - include: '#block'
    - include: '#string'
    - include: '#singlestring'
    - include: '#numeric'
    - include: '#keyword'
    - include: '#libraryfunction'
    - include: '#partoperator'
    - include: '#identifier'

  structure:
    name: meta.patel.structure
    begin: \(
    end: \)
    beginCaptures:
      '0': {'name': 'meta.tag.bracket.patel'}
    endCaptures:
      '0': {'name': 'meta.tag.bracket.patel'}
    patterns:
    - include: '#comment'
    - include: '#invoke'
    - include: '#structure'
    - include: '#block'
    - include: '#string'
    - include: '#singlestring'
    - include: '#numeric'
    - include: '#keyword'
    - include: '#libraryfunction'
    - include: '#partoperator'
    - include: '#identifier'

  structureinterpolate:
    name: meta.patel.invoke.interpolated
    begin: \\\(
    end: \)
    patterns:
    - include: '#comment'
    - include: '#invoke'
    - include: '#structure'
    - include: '#block'
    - include: '#string'
    - include: '#singlestring'
    - include: '#numeric'
    - include: '#keyword'
    - include: '#libraryfunction'
    - include: '#partoperator'
    - include: '#identifier'

  block:
    name: meta.patel.block
    begin: \{
    end: \}
    beginCaptures:
      '0': {'name': 'meta.tag.bracket.patel'}
    endCaptures:
      '0': {'name': 'meta.tag.bracket.patel'}
    patterns:
    - include: '#comment'
    - include: '#invoke'
    - include: '#structure'
    - include: '#block'
    - include: '#string'
    - include: '#singlestring'
    - include: '#numeric'
    - include: '#keyword'
    - include: '#libraryfunction'
    - include: '#partoperator'
    - include: '#identifier'

  comment:
    name: comment.singleline.patel
    match: '#.*'
    
  string:
    name: string.quoted.double.patel
    begin: '"'
    end: '"'
    patterns:
    - match: '[^\r\n"\\]+'
    - include: '#invokeinterpolate'
    - include: '#structureinterpolate'
    - match: \\(u[a-fA-F0-9]{4}|\s+\\|[^\r\nu\(\[])

  singlestring:
    name: string.quoted.single.patel
    begin: ''''
    end: ''''
    patterns:
    - match: '[^'']+'
    - match: ''''''
  keyword:
    name: keyword.patel
    match: '(?<=[\[\{\(\)\}\]\s,]|^)([\-_/+\.*<=>!?:$%_&~^@|]+|lambda|macro|define-macro|define|do|return|begin|true|false|null|undefined|if|while|piecewise|match|nothing|set|local|inc|dec|foreach|for|yield|new|then|else|let)(?=[\{\[\(\]\}\)\s])'
  libraryfunction:
    name: support.function.patel
    match: '(?<=[\[\{\(\)\}\]\s,]|^)((evaluate-in-scope|evaluate-here|evaluate|load-library|invoke|object|part|setpart|derive|closure|apply|export|cons|map|slice|regex|ssub|and|or|not|negate)(?=[\]\}\)\s])|(util|tags)(?=/))'
  identifier:
    name: identifier.patel
    match: '[a-zA-Z\-_+*<=>!?:$%_&~^@#][a-zA-Z0-9\-_+*<=>!?:$%_&~^@]*'
  partoperator:
    name: keyword.operator.part.patel
    match: '[\.`]'
  numeric:
    name: constant.numeric.patel
    match: 0x[a-fA-F0-9]+|\d+(\.\d+)?([eE][+\-]?\d+)?

patterns:
- include: '#comment'
- include: '#invoke'
- include: '#structure'
- include: '#block'
- include: '#string'
- include: '#singlestring'
- include: '#numeric'
- include: '#keyword'
- include: '#libraryfunction'
- include: '#partoperator'
- include: '#identifier'

...